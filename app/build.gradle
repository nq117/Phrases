apply plugin: 'com.android.application'

def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.lt.phrases"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        ndk { abiFilters "armeabi", "x86_64", "x86" }
    }
    buildTypes {
        debug {
            minifyEnabled false
            // Zipalign优化
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            // 混淆
            minifyEnabled true
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    if (output.outputFile != null && output.outputFile.name.endsWith('.apk')
                            && 'release'.equals(variant.buildType.name)) {
                        def apkFile = new File(
                                output.outputFile.getParent(),
                                "lt_${variant.flavorName}_v${variant.versionName}_${buildTime()}.apk")
                        output.outputFile = apkFile
                    }
                }
            }

//            android.applicationVariants.all { variant ->
//                variant.outputs.all {//这里是all，下面是根据自己的情况来定制
//                    def date = new Date()
//                    def formattedDate = date.format('yyyyMMdd')
//                    def fileName
//                    if (variant.buildType.name == "release") {
//                        // 输出apk名称为app_100_release.apk
//                        fileName = "xxx_V${defaultConfig.versionName}.apk"
//                    } else if (variant.buildType.name == "debug") {
//                        // 输出apk名称为app_100_debug.apk
//                        fileName = "xxx_debug_V${defaultConfig.versionName}_${formattedDate}.apk"
//                    } else {
//                        // 输出apk名称为app_v1.0.0_2017-12-11_101_beta.apk
//                        fileName = "xxx_Beta_V${defaultConfig.versionName}.apk"
//                    }
//                    //outputFileName = "HuaxiaSign_${defaultConfig.versionName}_${formattedDate}.apk"
//                    //很多博客只是写了上面这句话，没有具体赋值，自己来选择赋值给outputFileName
//                    outputFileName = fileName
//                }
//            }
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    //Butterknife
    //    compile "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"
    testCompile 'junit:junit:4.12'
    //    compile project(':sdk')
    releaseCompile project(path: ':library', configuration: 'release')
    debugCompile project(path: ':library', configuration: 'debug')
}
